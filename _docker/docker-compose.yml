version: '3.4'
services:
  traefik:
    build: ./images/traefik/
    environment:
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_REGION=us-east-1
      - AWS_HOSTED_ZONE_ID=${AWS_HOSTED_ZONE_ID}
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - /srv/acme:/etc/traefik/acme
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - web
    restart: unless-stopped
  nginx:
    container_name: nginx
    build:
      context: ./images/nginx
    labels:
      traefik.enable: "true"
      traefik.backend: "nginx"
      traefik.frontend.rule: "Host:pasztor.at,www.pasztor.at"
      traefik.port: "80"
      traefik.protocol: "http"
      traefik.frontend.headers.SSLTemporaryRedirect: "false"
      traefik.frontend.headers.SSLRedirect: "true"
      traefik.frontend.headers.STSSeconds: "315360000"
      traefik.frontend.headers.STSIncludeSubdomains: "true"
      traefik.frontend.headers.STSPreload: "true"
      traefik.frontend.headers.forceSTSHeader: "false"
    networks:
      - web
    volumes:
      - type: bind
        source: /srv/www
        target: /var/www
      - type: bind
        source: /srv/ssl
        target: /etc/nginx/ssl
    restart: unless-stopped
  php:
    container_name: php
    image: opsbears/php-fpm:7.2
    networks:
      - web
    volumes:
      - type: bind
        source: /srv/www
        target: /var/www
    restart: unless-stopped
networks:
  web:
    driver: bridge
    attachable: true